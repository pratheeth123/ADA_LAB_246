#include <stdio.h>
#include <stdlib.h>
#define MAX 10
void dfs(int adj[MAX][MAX], int n, int visited[MAX], int stack[MAX], int *top, int node) {
    visited[node] = 1;
    for (int i = 0; i < n; i++) {
        if (adj[node][i] == 1 && !visited[i]) {
            dfs(adj, n, visited, stack, top, i);
        }
    }
    stack[(*top)++] = node;
}

void topologicalSort(int adj[MAX][MAX], int n) {
    int visited[MAX] = {0};
    int stack[MAX];
    int top = 0;
    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            dfs(adj, n, visited, stack, &top, i);
        }
    }
    printf("Topological Sort: ");
    for (int i = top - 1; i >= 0; i--) {
        printf("%d ", stack[i]);
    }
    printf("\n");
}
int main() {
    int adj[MAX][MAX], n;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    printf("Enter the adjacency matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &adj[i][j]);
        }
    }
    topologicalSort(adj, n);
    return 0;
}
Output

